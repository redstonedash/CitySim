
// todo : find typedef equivalent.
// public class World : Grid<T>
// {}

public class Grid<T>
{
	private T[,,] grid;
	
	public Grid (int width, int height, int depth, T filler)
	{
		this.grid   = new T[width, height, depth];
		
		// fill grid with default
		for (var w = 0; w < width; w++)
			for (var h = 0; h < height; h++)
				this.grid[w, h] = filler;
	}
	
	public int Volume ()
	{
		return this.Width() * this.Height() * this.Depth();
	}
	
	public int Area ()
	{
		return this.Width() * this.Height();
	}
	
	public int Height ()
	{
		return this.grid.GetLength(1);
	}
	
	public int Width ()
	{
		return this.grid.GetLength(0);
	}
	
	public T Read (int x, int y)
	{
		return this.grid[x, y];
	}
	
	public void Write (int x, int y, T val)
	{
		this.grid[x, y] = val;
	}
}
